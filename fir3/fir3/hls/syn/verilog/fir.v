// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fir_fir,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu48dr-ffvg1517-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.560437,HLS_SYN_LAT=106,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=506,HLS_SYN_LUT=3492,HLS_VERSION=2024_2}" *)

module fir (
        ap_clk,
        ap_rst_n,
        in_r_TVALID,
        out_r_TREADY,
        in_r_TDATA,
        in_r_TREADY,
        out_r_TDATA,
        out_r_TVALID,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   in_r_TVALID;
input   out_r_TREADY;
input  [23:0] in_r_TDATA;
output   in_r_TREADY;
output  [23:0] out_r_TDATA;
output   out_r_TVALID;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
wire    ap_continue;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_ready;
reg    ap_done_reg;
reg    ap_block_pp0_stage0_subdone_grp1_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_subdone_grp1_done_reg;
wire    regslice_both_out_r_U_apdone_blk;
wire    ap_loop_exit_ready;
reg    ap_loop_exit_ready_pp0_iter5_reg;
wire   [0:0] icmp_ln12_fu_261_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
reg    ap_ready_int;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg;
reg    ap_loop_exit_ready_delayed;
reg    in_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    out_r_TDATA_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0;
reg  signed [16:0] reg_11_reg_722;
wire   [16:0] reg_17_fu_231_p1;
reg   [16:0] reg_17_reg_728;
reg  signed [16:0] reg_14_reg_747;
reg    ap_block_pp0_stage0_11001_grp1;
reg   [17:0] trunc_ln_reg_753;
wire  signed [31:0] grp_fu_249_p2;
reg  signed [31:0] mul_ln25_1_reg_758;
wire  signed [28:0] grp_fu_336_p2;
reg  signed [28:0] mul_ln25_3_reg_778;
reg   [18:0] tmp_3_reg_783;
wire  signed [31:0] grp_fu_346_p2;
reg  signed [31:0] mul_ln25_4_reg_788;
wire  signed [30:0] grp_fu_446_p2;
reg  signed [30:0] mul_ln25_6_reg_813;
reg   [18:0] tmp_6_reg_818;
wire  signed [29:0] grp_fu_456_p2;
reg  signed [29:0] mul_ln25_7_reg_823;
wire  signed [29:0] grp_fu_466_p2;
reg  signed [29:0] mul_ln25_8_reg_828;
reg   [16:0] reg_81_fu_116;
wire    ap_loop_init;
reg   [6:0] n10_fu_120;
wire   [6:0] n_fu_255_p2;
reg   [6:0] ap_sig_allocacmp_n10_load;
reg   [16:0] reg_fu_124;
reg   [16:0] reg_1_fu_128;
reg   [16:0] reg_2_fu_132;
reg   [16:0] reg_3_fu_136;
reg   [16:0] reg_4_fu_140;
reg   [16:0] reg_5_fu_144;
reg   [16:0] ap_sig_allocacmp_reg_11;
reg   [16:0] reg_6_fu_148;
reg   [16:0] ap_sig_allocacmp_reg_10;
reg   [16:0] reg_7_fu_152;
reg   [16:0] ap_sig_allocacmp_reg_9;
reg    ap_block_pp0_stage0_01001_grp1;
wire  signed [16:0] sext_ln25_fu_235_p0;
wire  signed [14:0] grp_fu_239_p1;
wire  signed [16:0] sext_ln25_2_fu_245_p0;
wire   [14:0] grp_fu_249_p1;
wire   [30:0] shl_ln_fu_296_p3;
wire  signed [31:0] sext_ln25_1_fu_303_p1;
wire   [31:0] grp_fu_239_p2;
wire   [31:0] add_ln25_fu_307_p2;
wire  signed [13:0] grp_fu_326_p1;
wire  signed [16:0] sext_ln25_7_fu_332_p0;
wire   [11:0] grp_fu_336_p1;
wire  signed [16:0] sext_ln25_9_fu_342_p0;
wire   [14:0] grp_fu_346_p1;
wire   [31:0] tmp_1_fu_375_p3;
wire  signed [32:0] sext_ln25_3_fu_382_p1;
wire  signed [32:0] sext_ln25_4_fu_386_p1;
wire   [32:0] add_ln25_1_fu_389_p2;
wire   [18:0] tmp_2_fu_395_p4;
wire  signed [30:0] grp_fu_326_p2;
wire   [32:0] shl_ln25_2_fu_405_p3;
wire  signed [32:0] sext_ln25_6_fu_413_p1;
wire   [32:0] add_ln25_2_fu_417_p2;
wire  signed [14:0] grp_fu_436_p1;
wire  signed [16:0] sext_ln25_13_fu_442_p0;
wire   [13:0] grp_fu_446_p1;
wire  signed [16:0] sext_ln25_15_fu_452_p0;
wire   [12:0] grp_fu_456_p1;
wire  signed [16:0] sext_ln25_17_fu_462_p0;
wire  signed [12:0] grp_fu_466_p1;
wire   [32:0] shl_ln25_3_fu_486_p3;
wire  signed [32:0] sext_ln25_8_fu_493_p1;
wire   [32:0] add_ln25_3_fu_496_p2;
wire   [18:0] tmp_4_fu_502_p4;
wire   [32:0] shl_ln25_4_fu_512_p3;
wire  signed [32:0] sext_ln25_10_fu_520_p1;
wire   [32:0] add_ln25_4_fu_523_p2;
wire   [18:0] tmp_5_fu_529_p4;
wire  signed [31:0] grp_fu_436_p2;
wire   [32:0] shl_ln25_5_fu_539_p3;
wire  signed [32:0] sext_ln25_12_fu_547_p1;
wire   [32:0] add_ln25_5_fu_551_p2;
wire   [32:0] shl_ln25_6_fu_567_p3;
wire  signed [32:0] sext_ln25_14_fu_574_p1;
wire   [32:0] add_ln25_6_fu_577_p2;
wire   [18:0] tmp_7_fu_583_p4;
wire   [32:0] shl_ln25_7_fu_593_p3;
wire  signed [32:0] sext_ln25_16_fu_601_p1;
wire   [32:0] add_ln25_7_fu_604_p2;
wire   [18:0] tmp_8_fu_610_p4;
wire   [32:0] shl_ln25_8_fu_620_p3;
wire  signed [32:0] sext_ln25_18_fu_628_p1;
wire   [32:0] add_ln25_8_fu_631_p2;
wire   [18:0] tmp_9_fu_637_p4;
reg    grp_fu_239_ce;
reg    grp_fu_249_ce;
reg    grp_fu_326_ce;
reg    grp_fu_336_ce;
reg    grp_fu_346_ce;
reg    grp_fu_436_ce;
reg    grp_fu_446_ce;
reg    grp_fu_456_ce;
reg    grp_fu_466_ce;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    regslice_both_in_r_U_apdone_blk;
wire   [23:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_r_U_ack_in;
wire   [23:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_U_vld_out;
reg    ap_condition_261;
reg    ap_condition_609;
reg    ap_condition_608;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp1_done_reg = 1'b0;
#0 reg_81_fu_116 = 17'd0;
#0 n10_fu_120 = 7'd0;
#0 reg_fu_124 = 17'd0;
#0 reg_1_fu_128 = 17'd0;
#0 reg_2_fu_132 = 17'd0;
#0 reg_3_fu_136 = 17'd0;
#0 reg_4_fu_140 = 17'd0;
#0 reg_5_fu_144 = 17'd0;
#0 reg_6_fu_148 = 17'd0;
#0 reg_7_fu_152 = 17'd0;
end

fir_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

fir_mul_17s_15s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mul_17s_15s_32_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln25_fu_235_p0),
    .din1(grp_fu_239_p1),
    .ce(grp_fu_239_ce),
    .dout(grp_fu_239_p2)
);

fir_mul_17s_15ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mul_17s_15ns_32_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln25_2_fu_245_p0),
    .din1(grp_fu_249_p1),
    .ce(grp_fu_249_ce),
    .dout(grp_fu_249_p2)
);

fir_mul_17s_14s_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 31 ))
mul_17s_14s_31_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_11_reg_722),
    .din1(grp_fu_326_p1),
    .ce(grp_fu_326_ce),
    .dout(grp_fu_326_p2)
);

fir_mul_17s_12ns_29_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 29 ))
mul_17s_12ns_29_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln25_7_fu_332_p0),
    .din1(grp_fu_336_p1),
    .ce(grp_fu_336_ce),
    .dout(grp_fu_336_p2)
);

fir_mul_17s_15ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mul_17s_15ns_32_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln25_9_fu_342_p0),
    .din1(grp_fu_346_p1),
    .ce(grp_fu_346_ce),
    .dout(grp_fu_346_p2)
);

fir_mul_17s_15s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mul_17s_15s_32_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_14_reg_747),
    .din1(grp_fu_436_p1),
    .ce(grp_fu_436_ce),
    .dout(grp_fu_436_p2)
);

fir_mul_17s_14ns_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 31 ))
mul_17s_14ns_31_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln25_13_fu_442_p0),
    .din1(grp_fu_446_p1),
    .ce(grp_fu_446_ce),
    .dout(grp_fu_446_p2)
);

fir_mul_17s_13ns_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
mul_17s_13ns_30_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln25_15_fu_452_p0),
    .din1(grp_fu_456_p1),
    .ce(grp_fu_456_ce),
    .dout(grp_fu_456_p2)
);

fir_mul_17s_13s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
mul_17s_13s_30_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln25_17_fu_462_p0),
    .din1(grp_fu_466_p1),
    .ce(grp_fu_466_ce),
    .dout(grp_fu_466_p2)
);

fir_flow_control_loop_delay_pipe flow_control_loop_delay_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue),
    .ap_loop_exit_ready_delayed(ap_loop_exit_ready_delayed)
);

fir_regslice_both #(
    .DataWidth( 24 ))
regslice_both_in_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_U_apdone_blk)
);

fir_regslice_both #(
    .DataWidth( 24 ))
regslice_both_out_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp1)) begin
            ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b0;
    end else begin
        if ((ap_start_int == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp1)) begin
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_261)) begin
        n10_fu_120 <= n_fu_255_p2;
    end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_609)) begin
        reg_1_fu_128 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        reg_1_fu_128 <= reg_14_reg_747;
    end
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
    if ((1'b1 == ap_condition_608)) begin
        reg_2_fu_132 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        reg_2_fu_132 <= reg_3_fu_136;
    end
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
    if ((1'b1 == ap_condition_608)) begin
        reg_3_fu_136 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        reg_3_fu_136 <= reg_4_fu_140;
    end
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
    if ((1'b1 == ap_condition_608)) begin
        reg_4_fu_140 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        reg_4_fu_140 <= reg_11_reg_722;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_261)) begin
    reg_5_fu_144 <= ap_sig_allocacmp_reg_10;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_261)) begin
    reg_6_fu_148 <= ap_sig_allocacmp_reg_9;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_261)) begin
    reg_7_fu_152 <= reg_17_fu_231_p1;
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_609)) begin
        reg_81_fu_116 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        reg_81_fu_116 <= reg_fu_124;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_609)) begin
        reg_fu_124 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        reg_fu_124 <= reg_1_fu_128;
    end
end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg <= ap_condition_exit_pp0_iter0_stage0;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        mul_ln25_1_reg_758 <= grp_fu_249_p2;
        reg_11_reg_722 <= ap_sig_allocacmp_reg_11;
        reg_17_reg_728 <= reg_17_fu_231_p1;
        trunc_ln_reg_753 <= {{add_ln25_fu_307_p2[31:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        mul_ln25_3_reg_778 <= grp_fu_336_p2;
        mul_ln25_4_reg_788 <= grp_fu_346_p2;
        mul_ln25_6_reg_813 <= grp_fu_446_p2;
        mul_ln25_7_reg_823 <= grp_fu_456_p2;
        mul_ln25_8_reg_828 <= grp_fu_466_p2;
        tmp_3_reg_783 <= {{add_ln25_2_fu_417_p2[32:14]}};
        tmp_6_reg_818 <= {{add_ln25_5_fu_551_p2[32:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_14_reg_747 <= reg_2_fu_132;
    end
end

always @ (*) begin
    if (((icmp_ln12_fu_261_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg))) begin
        ap_loop_exit_ready_delayed = 1'b1;
    end else begin
        ap_loop_exit_ready_delayed = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n10_load = 7'd0;
    end else begin
        ap_sig_allocacmp_n10_load = n10_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_reg_10 = 17'd0;
    end else begin
        ap_sig_allocacmp_reg_10 = reg_6_fu_148;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_reg_11 = 17'd0;
    end else begin
        ap_sig_allocacmp_reg_11 = reg_5_fu_144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_reg_9 = 17'd0;
    end else begin
        ap_sig_allocacmp_reg_9 = reg_7_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_239_ce = 1'b1;
    end else begin
        grp_fu_239_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_249_ce = 1'b1;
    end else begin
        grp_fu_249_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_326_ce = 1'b1;
    end else begin
        grp_fu_326_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_336_ce = 1'b1;
    end else begin
        grp_fu_336_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_346_ce = 1'b1;
    end else begin
        grp_fu_346_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        grp_fu_436_ce = 1'b1;
    end else begin
        grp_fu_436_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        grp_fu_446_ce = 1'b1;
    end else begin
        grp_fu_446_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        grp_fu_456_ce = 1'b1;
    end else begin
        grp_fu_456_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        grp_fu_466_ce = 1'b1;
    end else begin
        grp_fu_466_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln25_1_fu_389_p2 = ($signed(sext_ln25_3_fu_382_p1) + $signed(sext_ln25_4_fu_386_p1));

assign add_ln25_2_fu_417_p2 = ($signed(shl_ln25_2_fu_405_p3) + $signed(sext_ln25_6_fu_413_p1));

assign add_ln25_3_fu_496_p2 = ($signed(shl_ln25_3_fu_486_p3) + $signed(sext_ln25_8_fu_493_p1));

assign add_ln25_4_fu_523_p2 = ($signed(shl_ln25_4_fu_512_p3) + $signed(sext_ln25_10_fu_520_p1));

assign add_ln25_5_fu_551_p2 = ($signed(shl_ln25_5_fu_539_p3) + $signed(sext_ln25_12_fu_547_p1));

assign add_ln25_6_fu_577_p2 = ($signed(shl_ln25_6_fu_567_p3) + $signed(sext_ln25_14_fu_574_p1));

assign add_ln25_7_fu_604_p2 = ($signed(shl_ln25_7_fu_593_p3) + $signed(sext_ln25_16_fu_601_p1));

assign add_ln25_8_fu_631_p2 = ($signed(shl_ln25_8_fu_620_p3) + $signed(sext_ln25_18_fu_628_p1));

assign add_ln25_fu_307_p2 = ($signed(sext_ln25_1_fu_303_p1) + $signed(grp_fu_239_p2));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001_grp1 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_out_r_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg)))) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_start_int == 1'b1) & ((in_r_TVALID_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_done_reg == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp0 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_out_r_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg)))) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_start_int == 1'b1) & ((in_r_TVALID_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_done_reg == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp0 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp1 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((out_r_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_condition_261 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_608 = ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1));
end

always @ (*) begin
    ap_condition_609 = ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_239_p1 = 32'd4294954188;

assign grp_fu_249_p1 = 32'd9830;

assign grp_fu_326_p1 = 31'd2147477094;

assign grp_fu_336_p1 = 29'd1638;

assign grp_fu_346_p1 = 32'd9830;

assign grp_fu_436_p1 = 32'd4294957465;

assign grp_fu_446_p1 = 31'd6553;

assign grp_fu_456_p1 = 30'd3276;

assign grp_fu_466_p1 = 30'd1073738547;

assign icmp_ln12_fu_261_p2 = ((ap_sig_allocacmp_n10_load == 7'd99) ? 1'b1 : 1'b0);

assign in_r_TREADY = regslice_both_in_r_U_ack_in;

assign n_fu_255_p2 = (ap_sig_allocacmp_n10_load + 7'd1);

assign out_r_TDATA_int_regslice = tmp_9_fu_637_p4;

assign out_r_TVALID = regslice_both_out_r_U_vld_out;

assign reg_17_fu_231_p1 = in_r_TDATA_int_regslice[16:0];

assign sext_ln25_10_fu_520_p1 = mul_ln25_4_reg_788;

assign sext_ln25_12_fu_547_p1 = grp_fu_436_p2;

assign sext_ln25_13_fu_442_p0 = reg_1_fu_128;

assign sext_ln25_14_fu_574_p1 = mul_ln25_6_reg_813;

assign sext_ln25_15_fu_452_p0 = reg_fu_124;

assign sext_ln25_16_fu_601_p1 = mul_ln25_7_reg_823;

assign sext_ln25_17_fu_462_p0 = reg_81_fu_116;

assign sext_ln25_18_fu_628_p1 = mul_ln25_8_reg_828;

assign sext_ln25_1_fu_303_p1 = $signed(shl_ln_fu_296_p3);

assign sext_ln25_2_fu_245_p0 = ap_sig_allocacmp_reg_10;

assign sext_ln25_3_fu_382_p1 = $signed(tmp_1_fu_375_p3);

assign sext_ln25_4_fu_386_p1 = mul_ln25_1_reg_758;

assign sext_ln25_6_fu_413_p1 = grp_fu_326_p2;

assign sext_ln25_7_fu_332_p0 = reg_4_fu_140;

assign sext_ln25_8_fu_493_p1 = mul_ln25_3_reg_778;

assign sext_ln25_9_fu_342_p0 = reg_3_fu_136;

assign sext_ln25_fu_235_p0 = ap_sig_allocacmp_reg_9;

assign shl_ln25_2_fu_405_p3 = {{tmp_2_fu_395_p4}, {14'd0}};

assign shl_ln25_3_fu_486_p3 = {{tmp_3_reg_783}, {14'd0}};

assign shl_ln25_4_fu_512_p3 = {{tmp_4_fu_502_p4}, {14'd0}};

assign shl_ln25_5_fu_539_p3 = {{tmp_5_fu_529_p4}, {14'd0}};

assign shl_ln25_6_fu_567_p3 = {{tmp_6_reg_818}, {14'd0}};

assign shl_ln25_7_fu_593_p3 = {{tmp_7_fu_583_p4}, {14'd0}};

assign shl_ln25_8_fu_620_p3 = {{tmp_8_fu_610_p4}, {14'd0}};

assign shl_ln_fu_296_p3 = {{reg_17_reg_728}, {14'd0}};

assign tmp_1_fu_375_p3 = {{trunc_ln_reg_753}, {14'd0}};

assign tmp_2_fu_395_p4 = {{add_ln25_1_fu_389_p2[32:14]}};

assign tmp_4_fu_502_p4 = {{add_ln25_3_fu_496_p2[32:14]}};

assign tmp_5_fu_529_p4 = {{add_ln25_4_fu_523_p2[32:14]}};

assign tmp_7_fu_583_p4 = {{add_ln25_6_fu_577_p2[32:14]}};

assign tmp_8_fu_610_p4 = {{add_ln25_7_fu_604_p2[32:14]}};

assign tmp_9_fu_637_p4 = {{add_ln25_8_fu_631_p2[32:14]}};

endmodule //fir
