// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fir_fir,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu48dr-ffvg1517-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.454000,HLS_SYN_LAT=187,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=6260,HLS_SYN_LUT=4256,HLS_VERSION=2024_2}" *)

module fir (
        ap_clk,
        ap_rst_n,
        in_r_TVALID,
        out_r_TREADY,
        in_r_TDATA,
        in_r_TREADY,
        out_r_TDATA,
        out_r_TVALID,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   in_r_TVALID;
input   out_r_TREADY;
input  [31:0] in_r_TDATA;
output   in_r_TREADY;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
wire    ap_continue;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_enable_reg_pp0_iter78;
reg    ap_enable_reg_pp0_iter79;
reg    ap_enable_reg_pp0_iter80;
reg    ap_enable_reg_pp0_iter81;
reg    ap_enable_reg_pp0_iter82;
reg    ap_enable_reg_pp0_iter83;
reg    ap_enable_reg_pp0_iter84;
reg    ap_enable_reg_pp0_iter85;
reg    ap_enable_reg_pp0_iter86;
reg    ap_idle_pp0;
wire    ap_ready;
reg    ap_done_reg;
reg    ap_block_pp0_stage0_subdone_grp1_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_subdone_grp1_done_reg;
wire    regslice_both_out_r_U_apdone_blk;
wire    ap_loop_exit_ready;
reg    ap_loop_exit_ready_pp0_iter86_reg;
wire   [0:0] icmp_ln12_fu_281_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
reg    ap_ready_int;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter3_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter4_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter5_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter6_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter7_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter8_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter9_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter10_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter11_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter12_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter13_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter14_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter15_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter16_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter17_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter18_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter19_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter20_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter21_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter22_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter23_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter24_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter25_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter26_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter27_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter28_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter29_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter30_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter31_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter32_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter33_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter34_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter35_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter36_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter37_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter38_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter39_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter40_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter41_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter42_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter43_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter44_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter45_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter46_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter47_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter48_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter49_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter50_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter51_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter52_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter53_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter54_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter55_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter56_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter57_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter58_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter59_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter60_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter61_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter62_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter63_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter64_reg;
reg    ap_loop_exit_ready_delayed;
reg    in_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    out_r_TDATA_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0;
reg   [31:0] reg_16_reg_433;
reg   [31:0] reg_16_reg_433_pp0_iter1_reg;
reg   [31:0] reg_16_reg_433_pp0_iter2_reg;
reg   [31:0] reg_16_reg_433_pp0_iter3_reg;
reg   [31:0] reg_16_reg_433_pp0_iter4_reg;
reg   [31:0] reg_16_reg_433_pp0_iter5_reg;
reg   [31:0] reg_16_reg_433_pp0_iter6_reg;
reg   [31:0] reg_16_reg_433_pp0_iter7_reg;
wire   [31:0] reg_17_fu_270_p1;
wire   [31:0] grp_fu_164_p2;
reg   [31:0] mul_reg_448;
reg   [31:0] reg_15_reg_453;
reg    ap_block_pp0_stage0_11001_grp1;
reg   [31:0] reg_15_reg_453_pp0_iter9_reg;
reg   [31:0] reg_15_reg_453_pp0_iter10_reg;
reg   [31:0] reg_15_reg_453_pp0_iter11_reg;
reg   [31:0] reg_15_reg_453_pp0_iter12_reg;
reg   [31:0] reg_15_reg_453_pp0_iter13_reg;
reg   [31:0] reg_15_reg_453_pp0_iter14_reg;
reg   [31:0] reg_15_reg_453_pp0_iter15_reg;
wire   [31:0] grp_fu_123_p2;
reg   [31:0] y_reg_459;
wire   [31:0] grp_fu_169_p2;
reg   [31:0] mul_1_reg_464;
reg   [31:0] reg_14_reg_469;
reg   [31:0] reg_14_reg_469_pp0_iter17_reg;
reg   [31:0] reg_14_reg_469_pp0_iter18_reg;
reg   [31:0] reg_14_reg_469_pp0_iter19_reg;
reg   [31:0] reg_14_reg_469_pp0_iter20_reg;
reg   [31:0] reg_14_reg_469_pp0_iter21_reg;
reg   [31:0] reg_14_reg_469_pp0_iter22_reg;
reg   [31:0] reg_14_reg_469_pp0_iter23_reg;
reg   [31:0] reg_14_reg_469_pp0_iter24_reg;
reg   [31:0] reg_14_reg_469_pp0_iter25_reg;
reg   [31:0] reg_14_reg_469_pp0_iter26_reg;
reg   [31:0] reg_14_reg_469_pp0_iter27_reg;
reg   [31:0] reg_14_reg_469_pp0_iter28_reg;
reg   [31:0] reg_14_reg_469_pp0_iter29_reg;
reg   [31:0] reg_14_reg_469_pp0_iter30_reg;
reg   [31:0] reg_14_reg_469_pp0_iter31_reg;
wire   [31:0] grp_fu_128_p2;
reg   [31:0] y_1_reg_475;
wire   [31:0] grp_fu_174_p2;
reg   [31:0] mul_2_reg_480;
wire   [31:0] grp_fu_132_p2;
reg   [31:0] y_2_reg_485;
wire   [31:0] grp_fu_179_p2;
reg   [31:0] mul_3_reg_490;
reg   [31:0] reg_12_reg_495;
reg   [31:0] reg_12_reg_495_pp0_iter33_reg;
reg   [31:0] reg_12_reg_495_pp0_iter34_reg;
reg   [31:0] reg_12_reg_495_pp0_iter35_reg;
reg   [31:0] reg_12_reg_495_pp0_iter36_reg;
reg   [31:0] reg_12_reg_495_pp0_iter37_reg;
reg   [31:0] reg_12_reg_495_pp0_iter38_reg;
reg   [31:0] reg_12_reg_495_pp0_iter39_reg;
reg   [31:0] reg_12_reg_495_pp0_iter40_reg;
reg   [31:0] reg_12_reg_495_pp0_iter41_reg;
reg   [31:0] reg_12_reg_495_pp0_iter42_reg;
reg   [31:0] reg_12_reg_495_pp0_iter43_reg;
reg   [31:0] reg_12_reg_495_pp0_iter44_reg;
reg   [31:0] reg_12_reg_495_pp0_iter45_reg;
reg   [31:0] reg_12_reg_495_pp0_iter46_reg;
reg   [31:0] reg_12_reg_495_pp0_iter47_reg;
wire   [31:0] grp_fu_136_p2;
reg   [31:0] y_3_reg_506;
wire   [31:0] grp_fu_184_p2;
reg   [31:0] mul_4_reg_511;
wire   [31:0] grp_fu_140_p2;
reg   [31:0] y_4_reg_516;
wire   [31:0] grp_fu_189_p2;
reg   [31:0] mul_5_reg_521;
reg   [31:0] reg_10_reg_526;
reg   [31:0] reg_10_reg_526_pp0_iter49_reg;
reg   [31:0] reg_10_reg_526_pp0_iter50_reg;
reg   [31:0] reg_10_reg_526_pp0_iter51_reg;
reg   [31:0] reg_10_reg_526_pp0_iter52_reg;
reg   [31:0] reg_10_reg_526_pp0_iter53_reg;
reg   [31:0] reg_10_reg_526_pp0_iter54_reg;
reg   [31:0] reg_10_reg_526_pp0_iter55_reg;
reg   [31:0] reg_10_reg_526_pp0_iter56_reg;
reg   [31:0] reg_10_reg_526_pp0_iter57_reg;
reg   [31:0] reg_10_reg_526_pp0_iter58_reg;
reg   [31:0] reg_10_reg_526_pp0_iter59_reg;
reg   [31:0] reg_10_reg_526_pp0_iter60_reg;
reg   [31:0] reg_10_reg_526_pp0_iter61_reg;
reg   [31:0] reg_10_reg_526_pp0_iter62_reg;
reg   [31:0] reg_10_reg_526_pp0_iter63_reg;
wire   [31:0] grp_fu_144_p2;
reg   [31:0] y_5_reg_537;
wire   [31:0] grp_fu_194_p2;
reg   [31:0] mul_6_reg_542;
wire   [31:0] grp_fu_148_p2;
reg   [31:0] y_6_reg_547;
wire   [31:0] grp_fu_199_p2;
reg   [31:0] mul_7_reg_552;
reg   [31:0] reg8_load_reg_557;
reg   [31:0] reg8_load_reg_557_pp0_iter65_reg;
reg   [31:0] reg8_load_reg_557_pp0_iter66_reg;
reg   [31:0] reg8_load_reg_557_pp0_iter67_reg;
reg   [31:0] reg8_load_reg_557_pp0_iter68_reg;
reg   [31:0] reg8_load_reg_557_pp0_iter69_reg;
reg   [31:0] reg8_load_reg_557_pp0_iter70_reg;
reg   [31:0] reg8_load_reg_557_pp0_iter71_reg;
wire   [31:0] grp_fu_152_p2;
reg   [31:0] y_7_reg_567;
wire   [31:0] grp_fu_204_p2;
reg   [31:0] mul_8_reg_572;
wire   [31:0] grp_fu_156_p2;
reg   [31:0] y_8_reg_577;
wire   [31:0] grp_fu_209_p2;
reg   [31:0] mul_9_reg_582;
wire   [31:0] grp_fu_160_p2;
reg   [31:0] y_9_reg_587;
reg   [31:0] reg_fu_70;
wire    ap_loop_init;
reg   [31:0] reg_1_fu_74;
reg   [31:0] reg_2_fu_78;
reg   [31:0] reg8_fu_82;
reg   [6:0] n10_fu_86;
wire   [6:0] n_fu_275_p2;
reg   [6:0] ap_sig_allocacmp_n10_load;
reg   [31:0] reg_3_fu_90;
reg   [31:0] reg_4_fu_94;
reg   [31:0] reg_5_fu_98;
reg   [31:0] reg_6_fu_102;
reg   [31:0] reg_7_fu_106;
reg   [31:0] ap_sig_allocacmp_reg_16;
reg    ap_block_pp0_stage0_01001_grp1;
wire   [31:0] grp_fu_164_p0;
reg    grp_fu_123_ce;
reg    grp_fu_128_ce;
reg    grp_fu_132_ce;
reg    grp_fu_136_ce;
reg    grp_fu_140_ce;
reg    grp_fu_144_ce;
reg    grp_fu_148_ce;
reg    grp_fu_152_ce;
reg    grp_fu_156_ce;
reg    grp_fu_160_ce;
reg    grp_fu_164_ce;
reg    grp_fu_169_ce;
reg    grp_fu_174_ce;
reg    grp_fu_179_ce;
reg    grp_fu_184_ce;
reg    grp_fu_189_ce;
reg    grp_fu_194_ce;
reg    grp_fu_199_ce;
reg    grp_fu_204_ce;
reg    grp_fu_209_ce;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg    ap_loop_exit_ready_pp0_iter68_reg;
reg    ap_loop_exit_ready_pp0_iter69_reg;
reg    ap_loop_exit_ready_pp0_iter70_reg;
reg    ap_loop_exit_ready_pp0_iter71_reg;
reg    ap_loop_exit_ready_pp0_iter72_reg;
reg    ap_loop_exit_ready_pp0_iter73_reg;
reg    ap_loop_exit_ready_pp0_iter74_reg;
reg    ap_loop_exit_ready_pp0_iter75_reg;
reg    ap_loop_exit_ready_pp0_iter76_reg;
reg    ap_loop_exit_ready_pp0_iter77_reg;
reg    ap_loop_exit_ready_pp0_iter78_reg;
reg    ap_loop_exit_ready_pp0_iter79_reg;
reg    ap_loop_exit_ready_pp0_iter80_reg;
reg    ap_loop_exit_ready_pp0_iter81_reg;
reg    ap_loop_exit_ready_pp0_iter82_reg;
reg    ap_loop_exit_ready_pp0_iter83_reg;
reg    ap_loop_exit_ready_pp0_iter84_reg;
reg    ap_loop_exit_ready_pp0_iter85_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    regslice_both_in_r_U_apdone_blk;
wire   [31:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_r_U_ack_in;
wire   [31:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_U_vld_out;
reg    ap_condition_1242;
reg    ap_condition_1635;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 ap_enable_reg_pp0_iter79 = 1'b0;
#0 ap_enable_reg_pp0_iter80 = 1'b0;
#0 ap_enable_reg_pp0_iter81 = 1'b0;
#0 ap_enable_reg_pp0_iter82 = 1'b0;
#0 ap_enable_reg_pp0_iter83 = 1'b0;
#0 ap_enable_reg_pp0_iter84 = 1'b0;
#0 ap_enable_reg_pp0_iter85 = 1'b0;
#0 ap_enable_reg_pp0_iter86 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp1_done_reg = 1'b0;
#0 reg_fu_70 = 32'd0;
#0 reg_1_fu_74 = 32'd0;
#0 reg_2_fu_78 = 32'd0;
#0 reg8_fu_82 = 32'd0;
#0 n10_fu_86 = 7'd0;
#0 reg_3_fu_90 = 32'd0;
#0 reg_4_fu_94 = 32'd0;
#0 reg_5_fu_98 = 32'd0;
#0 reg_6_fu_102 = 32'd0;
#0 reg_7_fu_106 = 32'd0;
end

fir_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul_reg_448),
    .din1(32'd0),
    .ce(grp_fu_123_ce),
    .dout(grp_fu_123_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_reg_459),
    .din1(mul_1_reg_464),
    .ce(grp_fu_128_ce),
    .dout(grp_fu_128_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_1_reg_475),
    .din1(mul_2_reg_480),
    .ce(grp_fu_132_ce),
    .dout(grp_fu_132_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_2_reg_485),
    .din1(mul_3_reg_490),
    .ce(grp_fu_136_ce),
    .dout(grp_fu_136_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_3_reg_506),
    .din1(mul_4_reg_511),
    .ce(grp_fu_140_ce),
    .dout(grp_fu_140_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_4_reg_516),
    .din1(mul_5_reg_521),
    .ce(grp_fu_144_ce),
    .dout(grp_fu_144_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_5_reg_537),
    .din1(mul_6_reg_542),
    .ce(grp_fu_148_ce),
    .dout(grp_fu_148_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_6_reg_547),
    .din1(mul_7_reg_552),
    .ce(grp_fu_152_ce),
    .dout(grp_fu_152_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_7_reg_567),
    .din1(mul_8_reg_572),
    .ce(grp_fu_156_ce),
    .dout(grp_fu_156_p2)
);

fir_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_8_reg_577),
    .din1(mul_9_reg_582),
    .ce(grp_fu_160_ce),
    .dout(grp_fu_160_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_164_p0),
    .din1(32'd1056964608),
    .ce(grp_fu_164_ce),
    .dout(grp_fu_164_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_16_reg_433_pp0_iter7_reg),
    .din1(32'd3201092813),
    .ce(grp_fu_169_ce),
    .dout(grp_fu_169_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_15_reg_453_pp0_iter15_reg),
    .din1(32'd1050253722),
    .ce(grp_fu_174_ce),
    .dout(grp_fu_174_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_14_reg_469_pp0_iter23_reg),
    .din1(32'd3192704205),
    .ce(grp_fu_179_ce),
    .dout(grp_fu_179_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_4_fu_94),
    .din1(32'd1028443341),
    .ce(grp_fu_184_ce),
    .dout(grp_fu_184_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_12_reg_495_pp0_iter39_reg),
    .din1(32'd1050253722),
    .ce(grp_fu_189_ce),
    .dout(grp_fu_189_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_5_fu_98),
    .din1(32'd3197737370),
    .ce(grp_fu_194_ce),
    .dout(grp_fu_194_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_10_reg_526_pp0_iter55_reg),
    .din1(32'd1045220557),
    .ce(grp_fu_199_ce),
    .dout(grp_fu_199_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_6_fu_102),
    .din1(32'd1036831949),
    .ce(grp_fu_204_ce),
    .dout(grp_fu_204_p2)
);

fir_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg8_load_reg_557_pp0_iter71_reg),
    .din1(32'd3184315597),
    .ce(grp_fu_209_ce),
    .dout(grp_fu_209_p2)
);

fir_flow_control_loop_delay_pipe flow_control_loop_delay_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue),
    .ap_loop_exit_ready_delayed(ap_loop_exit_ready_delayed)
);

fir_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_U_apdone_blk)
);

fir_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp1)) begin
            ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b0;
    end else begin
        if ((ap_start_int == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp1)) begin
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter79 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter79 <= ap_enable_reg_pp0_iter78;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter80 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter80 <= ap_enable_reg_pp0_iter79;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter81 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter81 <= ap_enable_reg_pp0_iter80;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter82 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter82 <= ap_enable_reg_pp0_iter81;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter83 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter83 <= ap_enable_reg_pp0_iter82;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter84 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter84 <= ap_enable_reg_pp0_iter83;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter85 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter85 <= ap_enable_reg_pp0_iter84;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter86 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter86 <= ap_enable_reg_pp0_iter85;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter85_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter86_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter86_reg <= ap_loop_exit_ready_pp0_iter85_reg;
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1242)) begin
        n10_fu_86 <= n_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_1635)) begin
        reg8_fu_82 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter64 == 1'b1))) begin
        reg8_fu_82 <= reg_6_fu_102;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_1635)) begin
        reg_1_fu_74 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        reg_1_fu_74 <= reg_4_fu_94;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_1635)) begin
        reg_2_fu_78 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter48 == 1'b1))) begin
        reg_2_fu_78 <= reg_5_fu_98;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_1635)) begin
        reg_3_fu_90 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        reg_3_fu_90 <= reg_16_reg_433_pp0_iter7_reg;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_1635)) begin
        reg_4_fu_94 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        reg_4_fu_94 <= reg_14_reg_469_pp0_iter31_reg;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_1635)) begin
        reg_5_fu_98 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter48 == 1'b1))) begin
        reg_5_fu_98 <= reg_12_reg_495_pp0_iter47_reg;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_1635)) begin
        reg_6_fu_102 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter64 == 1'b1))) begin
        reg_6_fu_102 <= reg_10_reg_526_pp0_iter63_reg;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_1242)) begin
    reg_7_fu_106 <= reg_17_fu_270_p1;
end
end

always @ (posedge ap_clk) begin
if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
    if ((1'b1 == ap_condition_1635)) begin
        reg_fu_70 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        reg_fu_70 <= reg_15_reg_453_pp0_iter15_reg;
    end
end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_condition_exit_pp0_iter0_stage0_pp0_iter10_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter9_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter11_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter10_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter12_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter11_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter13_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter12_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter14_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter13_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter15_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter14_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter16_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter15_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter17_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter16_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter18_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter17_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter19_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter18_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter20_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter19_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter21_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter20_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter22_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter21_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter23_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter22_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter24_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter23_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter25_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter24_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter26_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter25_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter27_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter26_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter28_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter27_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter29_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter28_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter30_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter29_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter31_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter30_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter32_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter31_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter33_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter32_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter34_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter33_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter35_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter34_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter36_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter35_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter37_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter36_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter38_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter37_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter39_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter38_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter3_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter40_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter39_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter41_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter40_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter42_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter41_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter43_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter42_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter44_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter43_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter45_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter44_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter46_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter45_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter47_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter46_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter48_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter47_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter49_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter48_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter4_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter3_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter50_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter49_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter51_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter50_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter52_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter51_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter53_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter52_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter54_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter53_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter55_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter54_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter56_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter55_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter57_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter56_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter58_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter57_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter59_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter58_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter5_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter4_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter60_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter59_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter61_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter60_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter62_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter61_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter63_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter62_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter64_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter63_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter6_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter5_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter7_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter6_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter8_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter7_reg;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter9_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter68_reg <= ap_loop_exit_ready_pp0_iter67_reg;
        ap_loop_exit_ready_pp0_iter69_reg <= ap_loop_exit_ready_pp0_iter68_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter70_reg <= ap_loop_exit_ready_pp0_iter69_reg;
        ap_loop_exit_ready_pp0_iter71_reg <= ap_loop_exit_ready_pp0_iter70_reg;
        ap_loop_exit_ready_pp0_iter72_reg <= ap_loop_exit_ready_pp0_iter71_reg;
        ap_loop_exit_ready_pp0_iter73_reg <= ap_loop_exit_ready_pp0_iter72_reg;
        ap_loop_exit_ready_pp0_iter74_reg <= ap_loop_exit_ready_pp0_iter73_reg;
        ap_loop_exit_ready_pp0_iter75_reg <= ap_loop_exit_ready_pp0_iter74_reg;
        ap_loop_exit_ready_pp0_iter76_reg <= ap_loop_exit_ready_pp0_iter75_reg;
        ap_loop_exit_ready_pp0_iter77_reg <= ap_loop_exit_ready_pp0_iter76_reg;
        ap_loop_exit_ready_pp0_iter78_reg <= ap_loop_exit_ready_pp0_iter77_reg;
        ap_loop_exit_ready_pp0_iter79_reg <= ap_loop_exit_ready_pp0_iter78_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter80_reg <= ap_loop_exit_ready_pp0_iter79_reg;
        ap_loop_exit_ready_pp0_iter81_reg <= ap_loop_exit_ready_pp0_iter80_reg;
        ap_loop_exit_ready_pp0_iter82_reg <= ap_loop_exit_ready_pp0_iter81_reg;
        ap_loop_exit_ready_pp0_iter83_reg <= ap_loop_exit_ready_pp0_iter82_reg;
        ap_loop_exit_ready_pp0_iter84_reg <= ap_loop_exit_ready_pp0_iter83_reg;
        ap_loop_exit_ready_pp0_iter85_reg <= ap_loop_exit_ready_pp0_iter84_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        mul_reg_448 <= grp_fu_164_p2;
        reg_16_reg_433_pp0_iter2_reg <= reg_16_reg_433_pp0_iter1_reg;
        reg_16_reg_433_pp0_iter3_reg <= reg_16_reg_433_pp0_iter2_reg;
        reg_16_reg_433_pp0_iter4_reg <= reg_16_reg_433_pp0_iter3_reg;
        reg_16_reg_433_pp0_iter5_reg <= reg_16_reg_433_pp0_iter4_reg;
        reg_16_reg_433_pp0_iter6_reg <= reg_16_reg_433_pp0_iter5_reg;
        reg_16_reg_433_pp0_iter7_reg <= reg_16_reg_433_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg <= ap_condition_exit_pp0_iter0_stage0;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        reg_16_reg_433 <= ap_sig_allocacmp_reg_16;
        reg_16_reg_433_pp0_iter1_reg <= reg_16_reg_433;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        mul_1_reg_464 <= grp_fu_169_p2;
        mul_2_reg_480 <= grp_fu_174_p2;
        mul_3_reg_490 <= grp_fu_179_p2;
        mul_4_reg_511 <= grp_fu_184_p2;
        mul_5_reg_521 <= grp_fu_189_p2;
        mul_6_reg_542 <= grp_fu_194_p2;
        mul_7_reg_552 <= grp_fu_199_p2;
        mul_8_reg_572 <= grp_fu_204_p2;
        mul_9_reg_582 <= grp_fu_209_p2;
        reg8_load_reg_557 <= reg8_fu_82;
        reg8_load_reg_557_pp0_iter65_reg <= reg8_load_reg_557;
        reg8_load_reg_557_pp0_iter66_reg <= reg8_load_reg_557_pp0_iter65_reg;
        reg8_load_reg_557_pp0_iter67_reg <= reg8_load_reg_557_pp0_iter66_reg;
        reg8_load_reg_557_pp0_iter68_reg <= reg8_load_reg_557_pp0_iter67_reg;
        reg8_load_reg_557_pp0_iter69_reg <= reg8_load_reg_557_pp0_iter68_reg;
        reg8_load_reg_557_pp0_iter70_reg <= reg8_load_reg_557_pp0_iter69_reg;
        reg8_load_reg_557_pp0_iter71_reg <= reg8_load_reg_557_pp0_iter70_reg;
        reg_10_reg_526 <= reg_2_fu_78;
        reg_10_reg_526_pp0_iter49_reg <= reg_10_reg_526;
        reg_10_reg_526_pp0_iter50_reg <= reg_10_reg_526_pp0_iter49_reg;
        reg_10_reg_526_pp0_iter51_reg <= reg_10_reg_526_pp0_iter50_reg;
        reg_10_reg_526_pp0_iter52_reg <= reg_10_reg_526_pp0_iter51_reg;
        reg_10_reg_526_pp0_iter53_reg <= reg_10_reg_526_pp0_iter52_reg;
        reg_10_reg_526_pp0_iter54_reg <= reg_10_reg_526_pp0_iter53_reg;
        reg_10_reg_526_pp0_iter55_reg <= reg_10_reg_526_pp0_iter54_reg;
        reg_10_reg_526_pp0_iter56_reg <= reg_10_reg_526_pp0_iter55_reg;
        reg_10_reg_526_pp0_iter57_reg <= reg_10_reg_526_pp0_iter56_reg;
        reg_10_reg_526_pp0_iter58_reg <= reg_10_reg_526_pp0_iter57_reg;
        reg_10_reg_526_pp0_iter59_reg <= reg_10_reg_526_pp0_iter58_reg;
        reg_10_reg_526_pp0_iter60_reg <= reg_10_reg_526_pp0_iter59_reg;
        reg_10_reg_526_pp0_iter61_reg <= reg_10_reg_526_pp0_iter60_reg;
        reg_10_reg_526_pp0_iter62_reg <= reg_10_reg_526_pp0_iter61_reg;
        reg_10_reg_526_pp0_iter63_reg <= reg_10_reg_526_pp0_iter62_reg;
        reg_12_reg_495 <= reg_1_fu_74;
        reg_12_reg_495_pp0_iter33_reg <= reg_12_reg_495;
        reg_12_reg_495_pp0_iter34_reg <= reg_12_reg_495_pp0_iter33_reg;
        reg_12_reg_495_pp0_iter35_reg <= reg_12_reg_495_pp0_iter34_reg;
        reg_12_reg_495_pp0_iter36_reg <= reg_12_reg_495_pp0_iter35_reg;
        reg_12_reg_495_pp0_iter37_reg <= reg_12_reg_495_pp0_iter36_reg;
        reg_12_reg_495_pp0_iter38_reg <= reg_12_reg_495_pp0_iter37_reg;
        reg_12_reg_495_pp0_iter39_reg <= reg_12_reg_495_pp0_iter38_reg;
        reg_12_reg_495_pp0_iter40_reg <= reg_12_reg_495_pp0_iter39_reg;
        reg_12_reg_495_pp0_iter41_reg <= reg_12_reg_495_pp0_iter40_reg;
        reg_12_reg_495_pp0_iter42_reg <= reg_12_reg_495_pp0_iter41_reg;
        reg_12_reg_495_pp0_iter43_reg <= reg_12_reg_495_pp0_iter42_reg;
        reg_12_reg_495_pp0_iter44_reg <= reg_12_reg_495_pp0_iter43_reg;
        reg_12_reg_495_pp0_iter45_reg <= reg_12_reg_495_pp0_iter44_reg;
        reg_12_reg_495_pp0_iter46_reg <= reg_12_reg_495_pp0_iter45_reg;
        reg_12_reg_495_pp0_iter47_reg <= reg_12_reg_495_pp0_iter46_reg;
        reg_14_reg_469 <= reg_fu_70;
        reg_14_reg_469_pp0_iter17_reg <= reg_14_reg_469;
        reg_14_reg_469_pp0_iter18_reg <= reg_14_reg_469_pp0_iter17_reg;
        reg_14_reg_469_pp0_iter19_reg <= reg_14_reg_469_pp0_iter18_reg;
        reg_14_reg_469_pp0_iter20_reg <= reg_14_reg_469_pp0_iter19_reg;
        reg_14_reg_469_pp0_iter21_reg <= reg_14_reg_469_pp0_iter20_reg;
        reg_14_reg_469_pp0_iter22_reg <= reg_14_reg_469_pp0_iter21_reg;
        reg_14_reg_469_pp0_iter23_reg <= reg_14_reg_469_pp0_iter22_reg;
        reg_14_reg_469_pp0_iter24_reg <= reg_14_reg_469_pp0_iter23_reg;
        reg_14_reg_469_pp0_iter25_reg <= reg_14_reg_469_pp0_iter24_reg;
        reg_14_reg_469_pp0_iter26_reg <= reg_14_reg_469_pp0_iter25_reg;
        reg_14_reg_469_pp0_iter27_reg <= reg_14_reg_469_pp0_iter26_reg;
        reg_14_reg_469_pp0_iter28_reg <= reg_14_reg_469_pp0_iter27_reg;
        reg_14_reg_469_pp0_iter29_reg <= reg_14_reg_469_pp0_iter28_reg;
        reg_14_reg_469_pp0_iter30_reg <= reg_14_reg_469_pp0_iter29_reg;
        reg_14_reg_469_pp0_iter31_reg <= reg_14_reg_469_pp0_iter30_reg;
        reg_15_reg_453 <= reg_3_fu_90;
        reg_15_reg_453_pp0_iter10_reg <= reg_15_reg_453_pp0_iter9_reg;
        reg_15_reg_453_pp0_iter11_reg <= reg_15_reg_453_pp0_iter10_reg;
        reg_15_reg_453_pp0_iter12_reg <= reg_15_reg_453_pp0_iter11_reg;
        reg_15_reg_453_pp0_iter13_reg <= reg_15_reg_453_pp0_iter12_reg;
        reg_15_reg_453_pp0_iter14_reg <= reg_15_reg_453_pp0_iter13_reg;
        reg_15_reg_453_pp0_iter15_reg <= reg_15_reg_453_pp0_iter14_reg;
        reg_15_reg_453_pp0_iter9_reg <= reg_15_reg_453;
        y_1_reg_475 <= grp_fu_128_p2;
        y_2_reg_485 <= grp_fu_132_p2;
        y_3_reg_506 <= grp_fu_136_p2;
        y_4_reg_516 <= grp_fu_140_p2;
        y_5_reg_537 <= grp_fu_144_p2;
        y_6_reg_547 <= grp_fu_148_p2;
        y_7_reg_567 <= grp_fu_152_p2;
        y_8_reg_577 <= grp_fu_156_p2;
        y_9_reg_587 <= grp_fu_160_p2;
        y_reg_459 <= grp_fu_123_p2;
    end
end

always @ (*) begin
    if (((icmp_ln12_fu_281_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter86 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter85 == 1'b0) & (ap_enable_reg_pp0_iter84 == 1'b0) 
    & (ap_enable_reg_pp0_iter83 == 1'b0) & (ap_enable_reg_pp0_iter82 == 1'b0) & (ap_enable_reg_pp0_iter81 == 1'b0) & (ap_enable_reg_pp0_iter80 == 1'b0) & (ap_enable_reg_pp0_iter79 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 
    == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 
    == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_exit_pp0_iter0_stage0_pp0_iter64_reg))) begin
        ap_loop_exit_ready_delayed = 1'b1;
    end else begin
        ap_loop_exit_ready_delayed = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_n10_load = 7'd0;
    end else begin
        ap_sig_allocacmp_n10_load = n10_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_reg_16 = 32'd0;
    end else begin
        ap_sig_allocacmp_reg_16 = reg_7_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_123_ce = 1'b1;
    end else begin
        grp_fu_123_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_128_ce = 1'b1;
    end else begin
        grp_fu_128_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_132_ce = 1'b1;
    end else begin
        grp_fu_132_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_136_ce = 1'b1;
    end else begin
        grp_fu_136_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_140_ce = 1'b1;
    end else begin
        grp_fu_140_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_144_ce = 1'b1;
    end else begin
        grp_fu_144_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_148_ce = 1'b1;
    end else begin
        grp_fu_148_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_152_ce = 1'b1;
    end else begin
        grp_fu_152_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_156_ce = 1'b1;
    end else begin
        grp_fu_156_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_160_ce = 1'b1;
    end else begin
        grp_fu_160_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_164_ce = 1'b1;
    end else begin
        grp_fu_164_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_169_ce = 1'b1;
    end else begin
        grp_fu_169_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_174_ce = 1'b1;
    end else begin
        grp_fu_174_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_179_ce = 1'b1;
    end else begin
        grp_fu_179_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_184_ce = 1'b1;
    end else begin
        grp_fu_184_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_189_ce = 1'b1;
    end else begin
        grp_fu_189_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_194_ce = 1'b1;
    end else begin
        grp_fu_194_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_199_ce = 1'b1;
    end else begin
        grp_fu_199_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_204_ce = 1'b1;
    end else begin
        grp_fu_204_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg))) begin
        grp_fu_209_ce = 1'b1;
    end else begin
        grp_fu_209_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter86 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter85 == 1'b1)))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter85 == 1'b1))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001_grp1 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter86 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter85 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter86 == 1'b1) & ((regslice_both_out_r_U_apdone_blk == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (out_r_TREADY_int_regslice == 1'b0)))) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter85 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)) | ((ap_start_int == 1'b1) & ((ap_done_reg == 1'b1) | (in_r_TVALID_int_regslice == 1'b0) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_done_reg == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp0 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter86 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter85 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter86 == 1'b1) & ((regslice_both_out_r_U_apdone_blk == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (out_r_TREADY_int_regslice == 1'b0)))) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter85 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)) | ((ap_start_int == 1'b1) & ((ap_done_reg == 1'b1) | (in_r_TVALID_int_regslice == 1'b0) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_done_reg == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp0 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp1 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter86_reg == 1'b1) & (regslice_both_out_r_U_apdone_blk == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter86 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter85 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_1242 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1635 = ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_164_p0 = in_r_TDATA_int_regslice;

assign icmp_ln12_fu_281_p2 = ((ap_sig_allocacmp_n10_load == 7'd99) ? 1'b1 : 1'b0);

assign in_r_TREADY = regslice_both_in_r_U_ack_in;

assign n_fu_275_p2 = (ap_sig_allocacmp_n10_load + 7'd1);

assign out_r_TDATA_int_regslice = y_9_reg_587;

assign out_r_TVALID = regslice_both_out_r_U_vld_out;

assign reg_17_fu_270_p1 = in_r_TDATA_int_regslice;

endmodule //fir
